on:
  workflow_call:
    inputs:
      seed-environment-key:
        description: An artifact key
        required: true
        type: string
      rebuilt-channel-key:
        description: An artifact key
        required: true
        type: string
      patched-channel-key:
        description: A cache key
        required: true
        type: string
      patched-channel-path:
        description: A cache path
        required: true
        type: string
      distro-name:
        description: Name of distro
        required: true
        type: string
env:
  rebuilt_channel_path: './rebuilt-channel'
  seed_environment_path: './seed-env'
  environment_file: './solved-env-file.yml'
  environment_prefix: './test-env/

jobs:
  setup-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.create-version.outputs.version }}
    steps:
      - id: create-version
        shell: bash
        run: |
          echo version=$(
            python -c "import datetime; print(datetime.datetime.utcnow().strftime('%Y.%m.%d.%H.%M.%S'))"
          ) >> $GITHUB_OUTPUT

  build-metapackage:
    needs: [setup-version]
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: fetch seed env
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.seed-environment-key }}
          path: ${{ env.seed_environment_path }}

      - uses: actions/cache/restore@v3
        name: 'Fetch base channel with patches'
        id: patched-base-restore
        with:
          key: ${{ inputs.patched-channel-key }}
          path: ${{ inputs.patched-channel-path }}
          fail-on-cache-miss: true

      - name: fetch rebuilt channel
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.rebuilt-channel-key }}
          path: ${{ env.rebuilt_channel_path }}

      - uses: qiime2/action-library-packaging/environment@beta
        id: build-env
        name: "Set up build env"

      - uses: qiime2/action-library-packaging/build-metapackage@beta
        name: "Build metapackage"
        id: build-meta
        with:
          conda-activate: ${{ steps.build-env.outputs.conda-activate }}
          channels: '["${{ env.rebuilt_channel_path }}", "${{ inputs.patched-channel-path }}"]'
          metapackage-name: ${{ inputs.distro-name }}
          metapackage-version: ${{ needs.setup-version.outputs.version }}
          seed-environment: '${{ env.seed_environment_path }}/seed-environment-conda.yml'
          output-channel: ${{ env.rebuilt_channel_path }}

      - name: upload rebuilt channel with metapackage
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.rebuilt-channel-key }}
          path: ${{ env.rebuilt_channel_path }}

      - name: Install and create env file from metapackage
        uses: qiime2/action-library-packaging/make-metapackage-env-file@beta
        with:
          conda-activate: ${{ steps.build-env.outputs.conda-activate }}
          channels: ${{ steps.build-meta.outputs.channels }}
          package-name: ${{ inputs.distro-name }}
          package-version: ${{ needs.setup-version.outputs.version }}
          conda-prefix: '${{ runner.temp }}/temp-env'
          environment-file: ${{ env.environment_file }}

      - name: Install from env file and cache
        uses: qiime2/action-library-packaging/create-env@beta
        with:
          conda-prefix: ${{ env.environment_prefix }}
          environment-file: ${{ env.environment_file }}
