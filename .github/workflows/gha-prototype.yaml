name: gha-prototype

on:
  pull_request:
    paths:
      - .github/**

jobs:
  conf:
    runs-on: ubuntu-latest  # this is always run on linux
    env:
      PLATFORM: ubuntu-latest
      DISTRO: core
      EPOCH: 2022.4
    outputs:
      platform: ${{ steps.set-vars.outputs.platform }}
      distro: ${{ steps.set-vars.outputs.distro }}
      epoch: ${{ steps.set-vars.outputs.epoch }}
    steps:
      - name: set-vars
        id: set-vars
        run: |
          echo "::set-output name=platform::$PLATFORM"
          echo "::set-output name=distro::$DISTRO"
          echo "::set-output name=epoch::$EPOCH"

  integrate:
    needs: conf
    runs-on: ${{ needs.conf.outputs.platform }}
    outputs:
      pkgs: ${{ steps.destructure.outputs.pkgs }}
      metapackage-spec: ${{ steps.destructure.outputs.metapackage-spec }}
      q2-channel: ${{ steps.destructure.outputs.q2-channel }}
    steps:
      - uses: actions/checkout@v2
      - name: destructure metapackage
        id: destructure
        uses: ./.github/actions/destructure-metapackage
        with:
          distro: ${{ needs.conf.outputs.distro }}
          epoch: ${{ needs.conf.outputs.epoch }}

  test-package:
    name: test ${{ matrix.pkg.name }}
    needs: [conf, integrate]
    runs-on: ${{ needs.conf.outputs.platform }}
    strategy:
      fail-fast: false
      matrix:
        pkg: ${{ fromJson(needs.integrate.outputs.pkgs) }}
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/configure-conda
      - uses: ./.github/actions/test-package
        with:
          pkg-url: ${{ matrix.pkg.url }}
          q2-channel: ${{ needs.integrate.outputs.q2-channel }}
          metapackage-spec: ${{ needs.integrate.outputs.metapackage-spec }}

  phone-home:
    needs: [conf, test-package]
    runs-on: ${{ needs.conf.outputs.platform }}
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/configure-conda
      - uses: ./.github/actions/phone-home-pass
        with:
          token: ${{ secrets.LIBRARY_TOKEN }}
          epoch: ${{ needs.conf.outputs.epoch }}
          distro: ${{ needs.conf.outputs.distro }}
          platform: ${{ needs.conf.outputs.platform }}
