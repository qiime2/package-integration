name: gha-prototype

on:
  pull_request:
    paths:
      - .github/**

jobs:
  config:
    runs-on: ubuntu-latest
    env:
      PLATFORM: ubuntu-latest
      DISTRO: core
      EPOCH: 2022.4
    outputs:
      platform: ${{ steps.set-vars.outputs.platform }}
      distro: ${{ steps.set-vars.outputs.distro }}
      epoch: ${{ steps.set-vars.outputs.epoch }}
    steps:
      - name: set-vars
        id: set-vars
        run: |
          echo "::set-output name=platform::$PLATFORM"
          echo "::set-output name=distro::$DISTRO"
          echo "::set-output name=epoch::$EPOCH"

  integrate:
    needs: config
    runs-on: ${{ needs.config.outputs.platform }}
    steps:
      - name: checkout source
        uses: actions/checkout@v2

      - name: destructure metapackage
        id: destructure
        uses: ./.github/actions/destructure-metapackage
        with:
          distro: ${{ needs.config.outputs.distro }}
          epoch: ${{ needs.config.outputs.epoch }}

  test-package:
    name: test ${{ matrix.pkg.name }}
    needs: [config, integrate]
    runs-on: ${{ needs.config.outputs.platform }}
    strategy:
      fail-fast: false
      matrix:
        pkg: ${{ fromJson(needs.integrate.outputs.pkgs) }}
    steps:
      - name: configure conda and friends
        run: |
          source "$CONDA/etc/profile.d/conda.sh"
          conda activate base
          conda config --set always_yes yes
          conda config --set changeps1 no
          conda config --set quiet true
          sudo conda upgrade -n base -q -y -c defaults --override-channels conda
          sudo conda install -n base -q -y -c defaults --override-channels conda-build
          conda info -a
          conda config --show
      - name: run test
        run: |
          source "$CONDA/etc/profile.d/conda.sh"
          conda activate base
          wget ${{ matrix.pkg.url }}
          # TODO
