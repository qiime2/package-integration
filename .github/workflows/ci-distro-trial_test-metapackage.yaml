on:
  workflow_call:
    inputs:
      solved-environment-key:
        required: true
        type: string
      matrix-key:
        required: true
        type: string

env:
  matrix_path: './matrix'
  solved_environment_path: './env-file'

jobs:
  configure_matrix:
    name: 'Set up build matrix'
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:

      - uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.matrix-key }}
          path: '${{ env.matrix_path }}'

      - id: set-matrix
        run: |
          echo "matrix=$(cat ${{ env.matrix_path }}/retest_matrix.json)" >> $GITHUB_OUTPUT

  run_matrix:
    name: '${{ matrix.package }} (${{ matrix.os }})'
    needs: configure_matrix
    strategy:
      fail-fast: false
      matrix:
        package: ${{ fromJSON(needs.configure_matrix.outputs.matrix) }}
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: get environment path
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.solved-environment-key }}
          path: ${{ env.solved_environment_path }}

      - name: install environment
        id: env
        uses: qiime2/action-library-packaging/create-env@beta
        with:
          conda-prefix: './test-env'
          environment-file: ${{ env.solved_environment_path }}/environment-${{ runner.os }}-conda.yml

      - name: run qiime info
        shell: bash
        run: |
          ${{ steps.env.outputs.conda-activate }}
          qiime info

    # download the cached env file
    # activate the env
    # identify the .tarbz2 file for each pkg in retest_matrix
    # run test_package in ALP for each pkg in retest_matrix
