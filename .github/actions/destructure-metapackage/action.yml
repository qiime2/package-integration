name: 'Destructure a QIIME 2 Metapackage'
description: 'destructure a QIIME 2 metapackage for per-package testing'
inputs:
  distro:
    description: 'QIIME 2 distribution name'
    required: true
  epoch:
    description: 'QIIME 2 epoch label'
    required: true
outputs:
  pkgs:
    description: 'list of package bz2 paths'
    value: ${{ steps.collect-urls.outputs.pkgs }}
  metapackage-spec:
    description: 'metapackage specification'
    value: ${{ steps.metapackage.outputs.spec }}
  q2-channel:
    description: 'package channel url'
    value: ${{ steps.collect-urls.outputs.channel }}
runs:
  using: 'composite'
  steps:
    - name: prepare variables
      shell: bash
      run: |
        echo "DATA_FILE=${{ inputs.epoch }}/staged/${{ inputs.distro }}/data.yaml" >> $GITHUB_ENV
        echo "META_FILE=${{ inputs.epoch }}/staged/${{ inputs.distro }}/meta.yaml.jinja" >> $GITHUB_ENV
        echo "BUILD_FILE=${{ inputs.epoch }}/staged/${{ inputs.distro }}/conda_build_config.yaml" >> $GITHUB_ENV
        echo "Q2_CHANNEL=https://packages.qiime2.org/qiime2/${{ inputs.epoch }}/staged/${{ inputs.distro }}" >> $GITHUB_ENV
        echo "ENV_FILE=conda-env.yml" >> $GITHUB_ENV

    - name: configure conda and friends
      uses: ./.github/actions/configure-conda

    - name: identify metapackage
      id: metapackage
      shell: bash
      run: |
        source "$CONDA/etc/profile.d/conda.sh"
        conda activate base
        spec=$(head -n 2 $META_FILE | yq -r .package.name)=$(yq -r .version $DATA_FILE)
        echo "::set-output name=spec::$spec"

    - name: install metapackage
      shell: bash
      run: |
        source "$CONDA/etc/profile.d/conda.sh"
        sudo conda create -q \
          -n test-env \
          -c $Q2_CHANNEL \
          -c conda-forge \
          -c bioconda \
          -c defaults \
          ${{ steps.metapackage.outputs.spec }}
        sudo conda run -n test-env python -c 'import qiime2'

    - name: check repo consistency
      shell: bash
      run: |
        source "$CONDA/etc/profile.d/conda.sh"
        conda activate base
        consistent=$(jq -cs \
                       '[
                         (
                          [
                           .[1] as $build |
                           .[0].run[] |
                           { (.): $build[. | split("-") | join("_")][0] }
                          ] |
                          add
                         ) as $lookup |
                         .[2][] |
                         select(.name | in($lookup)) |
                         .version == $lookup[.name]
                        ] |
                        all' \
                       <(yq -cj '.' $DATA_FILE) \
                       <(yq -cj '.' $BUILD_FILE) \
                       <(conda list -n test-env --json))
        if [[ $consistent == "false" ]]
        then
            echo "conda_build_config.yaml is inconsistent with the metapackage"
            jq -s \
              '(
                [
                 .[1] as $build |
                 .[0].run[] |
                 { (.): $build[. | split("-") | join("_")][0] }
                ] |
                add
               ) as $lookup |
               .[2][] |
               select(.name | in($lookup)) |
               select(.version != $lookup[.name]) |
               {
                package: .name,
                version: .version,
                conda_build_config: $lookup[.name]
               }' \
               <(yq -cj '.' $DATA_FILE) \
               <(yq -cj '.' $BUILD_FILE) \
               <(conda list -n test-env --json)
            exit 1
        fi

    - name: collect tar.bz2's
      id: collect-urls
      shell: bash
      run: |
        source "$CONDA/etc/profile.d/conda.sh"
        conda activate base
        pkgs=$(jq -cs \
                 '[
                   .[0].run[] as $packages |
                   .[1][] |
                   select(.name | IN($packages)) |
                   {
                    url: (
                     .base_url + "/" + .platform + "/" + .dist_name + ".tar.bz2"
                    ),
                    name: .name
                   }
                  ]' \
                 <(yq -cj '.' $DATA_FILE) \
                 <(conda list -n test-env --json))
        echo "::set-output name=pkgs::$pkgs"
        echo "::set-output name=channel::$Q2_CHANNEL"

    - name: create convenience env file
      shell: bash
      run: |
        conda env export \
          --no-builds \
          -n test-env
          | yq -y '
          {
           channels: [
            "https://packages.qiime2.org/qiime2/${{ inputs.epoch }}/passed/${{ inputs.distro }}/",
            "qiime2/label/r${{ inputs.epoch }}",
            "conda-forge",
            "bioconda",
            "defaults"
           ],
           dependencies: .dependencies |
             map(select(. | startswith("qiime2-${{ inputs.distro }}") | not))
          }' > $ENV_FILE
        ::notice file=${{ env.ENV_FILE }}::This env file will only work after Library uploads the metapackage to packages.qiime2.org

    - name: upload convenience env file
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.ENV_FILE }}
        path: ${{ env.ENV_FILE }}
